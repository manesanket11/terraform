name: Terraform AWS Pipeline

on:
  push:
    branches: [ "main" ]
  pull_request:

permissions:
  contents: read

jobs:
  terraform:
    name: Terraform Plan and Apply
    runs-on: ubuntu-latest

    # üëá Make AWS credentials visible to all steps
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_REGION: ${{ secrets.AWS_REGION }}

    steps:
      # Step 1: Checkout repository
      - name: Checkout repository
        uses: actions/checkout@v4

      # Step 2: Setup Terraform
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.9.7

      # Step 3: Debug AWS environment variables
      - name: Debug AWS environment
        run: |
          echo "Listing AWS environment variables available:"
          env | grep AWS_ || echo "‚ùå No AWS_* variables found!"

      # Step 4: Create AWS credentials file (explicit fallback)
      - name: Configure AWS credentials
        run: |
          mkdir -p ~/.aws
          cat <<EOF > ~/.aws/credentials
          [default]
          aws_access_key_id=$AWS_ACCESS_KEY_ID
          aws_secret_access_key=$AWS_SECRET_ACCESS_KEY
          region=$AWS_REGION
          EOF
          echo "‚úÖ AWS credentials file created at ~/.aws/credentials"

      # Step 5: Terraform Init
      - name: Terraform Init
        run: terraform init

      # Step 6: Terraform Validate
      - name: Terraform Validate
        run: terraform validate

      # Step 7: Terraform Plan
      - name: Terraform Plan
        run: terraform plan -input=false

      # Step 8: Terraform Apply (auto-run only on main branch)
      - name: Terraform Apply
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        run: terraform apply -auto-approve -input=false
